[{"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\index.js":"1","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\App.js":"2","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\Form.js":"3","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Posts.js":"4","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\Post.js":"5","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\styles.js":"6","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\styles.js":"7","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\styles.js":"8","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\styles.js":"9","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\index.js":"10","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\posts.js":"11","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\actions\\posts.js":"12","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\api\\index.js":"13","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\index.js":"14","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Navbar\\styles.js":"15","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Home\\styles.js":"16","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\styles.js":"17","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Auth.js":"18","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Home\\Home.js":"19","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Navbar\\Navbar.js":"20","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Input.js":"21","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Icon.js":"22","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\auth.js":"23","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\constants\\actionTypes.js":"24","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\actions\\auth.js":"25","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Pagination\\Pagination.jsx":"26","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Pagination\\styles.js":"27","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\PostDetails\\PostDetails.jsx":"28","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\PostDetails\\styles.js":"29","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Openers\\Openers.js":"30","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\SearchForm\\SearchForm.js":"31","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\SearchForm\\styles.js":"32","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\PostDetails\\CommentSection.js":"33","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\Likes.js":"34"},{"size":495,"mtime":1638438324120,"results":"35","hashOfConfig":"36"},{"size":1571,"mtime":1648459586171,"results":"37","hashOfConfig":"36"},{"size":4306,"mtime":1647933840865,"results":"38","hashOfConfig":"36"},{"size":1801,"mtime":1648016552148,"results":"39","hashOfConfig":"36"},{"size":4661,"mtime":1648027065835,"results":"40","hashOfConfig":"36"},{"size":540,"mtime":1638776944629,"results":"41","hashOfConfig":"42"},{"size":657,"mtime":1647242857686,"results":"43","hashOfConfig":"36"},{"size":1402,"mtime":1648020692243,"results":"44","hashOfConfig":"36"},{"size":1124,"mtime":1648015268188,"results":"45","hashOfConfig":"36"},{"size":150,"mtime":1645530252988,"results":"46","hashOfConfig":"36"},{"size":1766,"mtime":1647941742555,"results":"47","hashOfConfig":"36"},{"size":3142,"mtime":1647941569710,"results":"48","hashOfConfig":"36"},{"size":1421,"mtime":1648020049226,"results":"49","hashOfConfig":"36"},{"size":507,"mtime":1647244618223,"results":"50","hashOfConfig":"36"},{"size":1773,"mtime":1648019279906,"results":"51","hashOfConfig":"36"},{"size":336,"mtime":1648014938086,"results":"52","hashOfConfig":"36"},{"size":834,"mtime":1648464209109,"results":"53","hashOfConfig":"36"},{"size":6753,"mtime":1648464084473,"results":"54","hashOfConfig":"36"},{"size":1350,"mtime":1648015540646,"results":"55","hashOfConfig":"36"},{"size":5394,"mtime":1648019231726,"results":"56","hashOfConfig":"36"},{"size":1063,"mtime":1639120272770,"results":"57","hashOfConfig":"36"},{"size":512,"mtime":1639119643550,"results":"58","hashOfConfig":"36"},{"size":857,"mtime":1639481331105,"results":"59","hashOfConfig":"36"},{"size":497,"mtime":1647941547838,"results":"60","hashOfConfig":"36"},{"size":639,"mtime":1639480009833,"results":"61","hashOfConfig":"36"},{"size":1162,"mtime":1648127356835,"results":"62","hashOfConfig":"36"},{"size":214,"mtime":1647253298293,"results":"63","hashOfConfig":"36"},{"size":3920,"mtime":1648027306177,"results":"64","hashOfConfig":"36"},{"size":1411,"mtime":1648022322588,"results":"65","hashOfConfig":"36"},{"size":1910,"mtime":1647925035232,"results":"66","hashOfConfig":"36"},{"size":2710,"mtime":1647261771081,"results":"67","hashOfConfig":"36"},{"size":336,"mtime":1647244701824,"results":"68","hashOfConfig":"36"},{"size":2608,"mtime":1648020658109,"results":"69","hashOfConfig":"36"},{"size":1533,"mtime":1648023261459,"results":"70","hashOfConfig":"36"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"go3x02",{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"73"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"73"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"73"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"tve4jg",{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"73"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"73"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"73"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"73"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"73"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"73"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"73"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"73"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"73"},"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\index.js",[],["153","154"],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\App.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\Form.js",["155"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\r\nimport FileBase from 'react-file-base64';\r\nimport useStyles from './styles';\r\nimport { useDispatch, useSelector } from 'react-redux'; //Import Dispatcher\r\nimport { createPost, updatePost } from '../../actions/posts';//Import Action from the actions\r\n\r\nconst Form = ({ currentId, setCurrentId, user }) => {\r\n    const dispatch = useDispatch();//Create dispatch\r\n    const history = useHistory();//To use redirect \r\n    const post = useSelector((state) => currentId ? state.data.posts.find(post => post._id === currentId) : null);\r\n    const classes = useStyles(); \r\n    const [postData, setPostData] = useState({\r\n        title: '',\r\n        message: '',\r\n        tags: '',\r\n        selectedFile: ''\r\n    });\r\n\r\n    const clear = () => {\r\n        setCurrentId(0);\r\n        setPostData({\r\n            title: '',\r\n            message: '',\r\n            tags: '',\r\n            selectedFile: ''\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(post) setPostData(post); \r\n    }, [post])\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if( currentId ){\r\n            dispatch(updatePost(currentId, {...postData, name: user?.result?.name}, history));\r\n            clear();\r\n        }else{\r\n            dispatch(createPost({...postData, name: user?.result?.name }, history));\r\n            //Dispatch action here\r\n            history.push('/posts')\r\n            clear();\r\n        }\r\n    }\r\n\r\n    if(!user?.result?.name){\r\n        return (\r\n            <Paper className={classes.paper + \" \" + classes.box} elevation={6}>\r\n                <Typography variable='h5' align='center'>\r\n                    Please <Link to='/auth'>Sign In</Link> to share your Glimpses or like other's.\r\n                </Typography>\r\n            </Paper>\r\n        )\r\n    }\r\n    return (\r\n        <Paper className = { classes.paper } elevation={6}>\r\n            <form autoComplete = 'off' noValidate className = { `${classes.root} ${classes.form}` } onSubmit = { handleSubmit }>\r\n                <Typography variant = \"h5\" className={'gradient__text__1' + \" \" + classes.headingFont}>{currentId ? \"Edit\" : \"Create\"} a Glimpse</Typography>\r\n                <TextField\r\n                    name = 'title'\r\n                    variant = 'outlined'\r\n                    label = 'Title'\r\n                    fullWidth\r\n                    value = { postData.title }\r\n                    //In order to setState using an object -\r\n                    onChange = { (e) => setPostData({ ...postData, title: e.target.value }) }\r\n                />\r\n                <TextField\r\n                    name = 'message'\r\n                    variant = 'outlined'\r\n                    label = 'Message'\r\n                    fullWidth \r\n                    multiline\r\n                    rows={4}\r\n                    value = { postData.message }\r\n                    //In order to setState using an object -\r\n                    onChange = { (e) => setPostData({ ...postData, message: e.target.value }) }\r\n                />\r\n                <TextField\r\n                    name = 'tags'\r\n                    variant = 'outlined'\r\n                    label = 'Tags(comma separated)'\r\n                    fullWidth\r\n                    value = { postData.tags }\r\n                    //In order to setState using an object -\r\n                    onChange = { (e) => setPostData({ ...postData, tags: e.target.value.split(',') }) }\r\n                />\r\n                <div className = { classes.fileInput}>\r\n                    <FileBase \r\n                        type = \"file\"\r\n                        multiple = { false }\r\n                        onDone = {({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}\r\n                    />\r\n                </div>\r\n                <Button className = { classes.buttonSubmit } variant = 'contained' color = 'primary' size = 'large' type = 'submit' fullWidth>Submit</Button>\r\n                <Button variant = 'contained' color = 'secondary' size = 'small' onClick = { clear } fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n};\r\nexport default Form;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Posts.js",["156"],"import React from 'react';\r\nimport useStyles from './styles';\r\nimport Post from './Post/Post';\r\nimport '../../App.css';\r\nimport DriveFileRenameOutlineRoundedIcon from '@mui/icons-material/DriveFileRenameOutlineRounded';\r\n\r\nimport { Grid, CircularProgress, Paper } from '@material-ui/core';\r\n\r\nimport { useSelector } from 'react-redux';//A hook to fetch data from the global redux store\r\n\r\nfunction Posts({ setCurrentId }) {\r\n    const { posts, isLoading } = useSelector((state) => state.data);\r\n    const classes = useStyles();\r\n\r\n\r\n    if(!posts.length && !isLoading) return (\r\n        <>\r\n            <div className={classes.noPostsBox}>\r\n                <div className={classes.noPosts}>\r\n                    <span className={classes.noText}>Be the first one to post</span>\r\n                    <DriveFileRenameOutlineRoundedIcon className={classes.writeIcon}/>\r\n                </div>\r\n                <div className={classes.add}>Hover on the action buttons to the right and click on \"<span className={classes.underline}>Add a Glimpse</span>\" to post.</div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        isLoading ? (\r\n            <div className={classes.loadingPaper}>\r\n                <CircularProgress size='7em' />\r\n            </div>\r\n        ) : (\r\n            <Grid className={classes.container} container item={true} alignItems='stretch' spacing={3} >\r\n                {\r\n                    posts.length > 0 && posts.map((post) => (\r\n                        <Grid item={true} key={post._id} xs={12} sm={6} md={6} lg={3} >\r\n                            <Post post={post} setCurrentId={setCurrentId} currentId={post._id}/>\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n        )  \r\n    );\r\n}\r\n\r\nexport default Posts;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\Post.js",["157"],"import React, { useState } from 'react';\r\nimport useStyles from './styles';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\nimport './style.css';\r\nimport  Likes from './Likes';\r\n\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n//Initialise dispatch\r\nimport { useDispatch } from 'react-redux';\r\n//Import Action\r\nimport { deletePost, likePost } from '../../../actions/posts';\r\n\r\nfunction Post({ post, setCurrentId }) {\r\n    const location = useLocation();\r\n    const message = post.message;\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n    const history = useHistory();\r\n    const [likes, setLikes] = useState(post?.likes)\r\n    const userId = user?.result?.googleId || user?.result?._id;\r\n    const hasLiked = post.likes.find((like) => like === userId);\r\n\r\n    const handleDelete = () => {\r\n        dispatch(deletePost(post._id));\r\n    }\r\n\r\n    const handleLike = () => {\r\n        dispatch(likePost(post._id));\r\n        if(hasLiked){\r\n          setLikes(post.likes.filter((id) => id !== userId))\r\n        }else{\r\n          setLikes([...post.likes, userId]);\r\n        }\r\n    }\r\n\r\n    const openPost = () => {\r\n        location.pathname = '/posts';\r\n        history.push(`${location.pathname}/${post._id}`);\r\n    }\r\n    \r\n    const click = () => {\r\n        console.log(post);\r\n    }\r\n    return (\r\n        <>\r\n            <Card className={classes.card} raised elevation={6}>\r\n                <ButtonBase\r\n                    component=\"span\"\r\n                    name=\"test\"\r\n                    className={classes.cardAction}\r\n                    onClick={openPost}\r\n                >\r\n                    <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} />\r\n                    <div className={classes.overlay}>\r\n                        <Typography variant=\"h6\">{post.name}</Typography>\r\n                        <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n                    </div>\r\n                    {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\r\n                        <div className={classes.overlay2} name=\"edit\">\r\n                            <Button\r\n                                onClick={(e) => {\r\n                                    e.stopPropagation();\r\n                                    setCurrentId(post._id);\r\n                                    click();\r\n                                }}\r\n                                style={{ color: 'white', position: 'relative', left: '20px'}}\r\n                                size=\"small\"\r\n                            >\r\n                                <MoreHorizIcon fontSize=\"medium\" />\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                    <div className={classes.details}>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n                    </div>\r\n                    <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message.split(' ').splice(0, 10)}...</Typography>\r\n                    </CardContent>\r\n                </ButtonBase>\r\n                <CardActions className={classes.cardActions}>\r\n                    <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={handleLike}>\r\n                        <Likes post={post} likes={likes} hasLiked={hasLiked}/>\r\n                    </Button>\r\n                    {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\r\n                        <div className=\"tooltip\">\r\n                            <Button className=\"button\" size=\"medium\" color=\"secondary\" onClick={ handleDelete }>\r\n                                <DeleteIcon fontSize=\"medium\" />\r\n                            </Button>\r\n                            <div className=\"tooltipText tooltipText-delete\" id=\"delete\">DELETE</div>\r\n                        </div>\r\n                    )}\r\n                </CardActions>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\styles.js",[],["158","159"],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\styles.js",["160"],"import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n    minHeight: '45%',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n    height: '450px'\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  cardAction: {\r\n    display: 'block',\r\n    textAlign: 'initial',\r\n  },\r\n});","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\index.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\posts.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\actions\\posts.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\api\\index.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\index.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Navbar\\styles.js",["161"],"import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { deepPurple } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  [theme.breakpoints.down('sm')]: {\r\n    appHeading: {\r\n      fontSize: '1rem',\r\n    },\r\n    appBar:{\r\n      padding: '0px 10px !important',\r\n    }\r\n  },\r\n  [theme.breakpoints.down('md')]: {\r\n    appHeading: {\r\n      fontSize: '1.5rem',\r\n    },\r\n    appBar:{\r\n      padding: '0px 10px !important',\r\n    }\r\n  },\r\n  appHeading: {\r\n    textTransform: 'uppercase',\r\n    fontFamily: 'Manrope',\r\n    textDecoration:'none',\r\n    color: '#3f51b5',\r\n    fontSize: '2.1rem',\r\n    fontWeight: 'bold',\r\n    textDecoration: 'underline',\r\n  },\r\n  appBar: {\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '0px 20px',\r\n  },\r\n  heading: {\r\n    color: 'rgba(0,183,255, 1)',\r\n    textDecoration: 'none',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  profile: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    width: 'auto',\r\n    alignItems: 'center',\r\n  },\r\n  user: {\r\n    display: 'flex',\r\n    cursor: \"pointer\",\r\n    position: 'relative',\r\n  },\r\n  userName: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginInline: '10px',\r\n    fontFamily: 'Manrope',\r\n    fontSize: '1.3rem',\r\n    color: '#3f51b5',\r\n  },\r\n  brandContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: \"#3f51b5\",\r\n  },\r\n  link: {\r\n    textTransform: 'uppercase',\r\n    textDecoration: 'none',\r\n    display: 'flex',\r\n    padding: '5px',\r\n  }\r\n}));\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Home\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Auth.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Home\\Home.js",["162"],"//Hooks\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n//Material-ui Components\r\nimport { Container, Grow, Grid } from '@material-ui/core';\r\n\r\n//Styles\r\nimport useStyles from './styles';\r\n\r\n//Components\r\nimport { Posts, Pagination, Openers } from '../index';\r\n\r\n//This function can be used as a hook\r\nconst useQuery = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst Home = ({ user }) => {\r\n    const [currentId, setCurrentId] = useState(null);\r\n    const classes = useStyles();\r\n    const query = useQuery();\r\n    const page = query.get('page') || 1; \r\n\r\n    return (\r\n        <div>\r\n            <Grow in> \r\n                    <Container maxWidth=\"xl\">\r\n                        <Grid container item={true} justifyContent = 'space-between' alignItems = 'stretch' spacing = {3} className={classes.mainContainer}>\r\n                            <Grid item={true} xs={12} sm={12} md={12} lg={12} >\r\n                                <Posts setCurrentId={setCurrentId}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n            </Grow>\r\n            <Openers currentId={currentId} setCurrentId={setCurrentId} user={user} />\r\n            <Pagination page={page} /> \r\n        </div>\r\n    )\r\n}\r\nexport default Home;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Navbar\\Navbar.js",["163","164","165"],"import React, { useEffect, useState } from 'react';\r\nimport { Avatar, Typography, Toolbar, Button } from '@material-ui/core';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport useStyles from './styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actionType from '../../constants/actionTypes';\r\nimport decode from 'jwt-decode';\r\nimport LoginRoundedIcon from '@mui/icons-material/LoginRounded';\r\nimport LogoutRoundedIcon from '@mui/icons-material/LogoutRounded';\r\nimport BungalowRoundedIcon from '@mui/icons-material/BungalowRounded';\r\nimport KeyboardArrowDownRoundedIcon from '@mui/icons-material/KeyboardArrowDownRounded';\r\nimport './style.css';\r\n\r\nconst Navbar = ({ user, setUser }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory('');\r\n    const location = useLocation();\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    //Immediately get the user from the localstorage if exists\r\n    //User goes into the localstorage once google signed in\r\n    \r\n    const logout = () => {\r\n        console.log('Logging out');\r\n        dispatch({ type: actionType.LOGOUT});\r\n        history.push('/');\r\n        setUser(null);\r\n    }\r\n\r\n    const handleUser = () => {\r\n        const userBox = document.querySelector(\".user-actions\");\r\n        const downIcon = document.querySelector(\".down-icon\");\r\n        if(!clicked){\r\n            setClicked(true);\r\n            userBox.style.transform = \"scaleY(1)\";\r\n            downIcon.style.transform = \"rotate(180deg)\";\r\n        }else{\r\n            setClicked(false);\r\n            userBox.style.transform = \"scaleY(0)\";\r\n            downIcon.style.transform = \"rotate(0deg)\";\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const token = user?.token;\r\n        if(token) {\r\n            const decodedToken = decode(token);\r\n\r\n            if(decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n        }\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n    }, [location]);\r\n\r\n    return (\r\n        <div>\r\n            <div className = { classes.appBar } position = \"static\" color = 'inherit'>\r\n                <div className={classes.toolbar}>\r\n                    <div className='icon-box'>\r\n                        {/* <Button component={Link} to ='/auth' variant='contained' color='primary'><LoginRoundedIcon className=\"icon\" /></Button> */}\r\n                        <Link to ='/' className={classes.link}>\r\n                            <BungalowRoundedIcon className=\"icon\" />\r\n                        </Link>\r\n                        <div className=\"tooltip\" style={{left: \"-10px\", top: \"45px\"}} >HOME</div>\r\n                    </div>\r\n                </div>\r\n                <div className={ classes.brandContainer }>\r\n                    <Typography className={classes.appHeading} component={Link} to='/'>\r\n                        Glimpses\r\n                    </Typography>\r\n                </div>\r\n                <div className={classes.toolbar}>\r\n                    {\r\n                        user ? (\r\n                            <div className={classes.profile}>\r\n                                <div className={classes.user} onClick={handleUser}>\r\n                                    <Avatar className={classes.purple} alt={user.result.name} src={user.result.imageUrl}>\r\n                                        {user.result.name.charAt(0)}\r\n                                    </Avatar>\r\n                                    <KeyboardArrowDownRoundedIcon className=\"down-icon\"/>\r\n                                    <div className=\"user-actions\">\r\n                                        <h2 className={classes.userName}>\r\n                                            {\r\n                                                user.result.name\r\n                                            }\r\n                                        </h2>\r\n                                        <div className='icon-box'>\r\n                                            <div className={classes.link}>\r\n                                                <LogoutRoundedIcon className=\"icon logout-icon\" onClick={ logout } />\r\n                                            </div>\r\n                                            <div className=\"tooltip tooltip-logout\">SIGN OUT</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {/* <Button variant='contained' className={classes.logout} color='secondary' onClick={ logout }>Logout</Button> */}\r\n                                \r\n                            </div>\r\n                        ) : (\r\n                            <div className='icon-box'>\r\n                                {/* <Button component={Link} to ='/auth' variant='contained' color='primary'><LoginRoundedIcon className=\"icon\" /></Button> */}\r\n                                <Link to ='/auth' className={classes.link}>\r\n                                    <LoginRoundedIcon className=\"icon\" />\r\n                                </Link>\r\n                                <div className=\"tooltip\">SIGN IN</div>\r\n                            </div>\r\n                            \r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Input.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Icon.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\auth.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\constants\\actionTypes.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\actions\\auth.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Pagination\\Pagination.jsx",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Pagination\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\PostDetails\\PostDetails.jsx",["166","167","168"],"import React, { useEffect } from 'react';\r\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { useParams, useHistory } from 'react-router-dom'; \r\nimport useStyles from './styles';\r\nimport CommentSection from './CommentSection';\r\nimport { getPost, getPostsBySearch } from '../../actions/posts';\r\n\r\nconst PostDetails = () => {\r\n    const { post, posts, isLoading } = useSelector((state) => state.data);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n    \r\n    useEffect(() => {\r\n        dispatch(getPost(id));\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        if(post)\r\n            dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }));\r\n    }, [post]);\r\n\r\n    const openPost = (_id) => history.push(`/posts/${_id}`)\r\n\r\n    if(!post) return null;\r\n\r\n    if(isLoading){\r\n        return (\r\n            <Paper elevation={6} className={classes.loadingPaper}>\r\n                <CircularProgress size='7em' />\r\n            </Paper>\r\n            );\r\n    }\r\n\r\n    const recposts = posts.filter(({_id}) => _id !== post._id);\r\n\r\n    return (\r\n        <Paper style={{padding: '20px', borderRadius: '15px', marginBottom: '20px'}}>\r\n            <div className={ classes.card }>\r\n                <div className={classes.section}>\r\n                    <Typography variant='h3' component='h2' className={classes.heading + ' ' + classes.mb}>{post.title}</Typography>\r\n                    <Typography variant='h6' className={classes.mb} gutterbottom='true' color='textSecondary' component='h2'>{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n                    <Typography variant='body1' gutterbottom='true' className={classes.mb} component='p'>{post.message}</Typography>\r\n                    <Typography variant='h6'>Created by: {post.name}</Typography>\r\n                    <Typography variant='body1'>{moment(post.createdAt).fromNow()}</Typography>\r\n                    <Divider style={{margin: '20px 0'}}/>\r\n                        <CommentSection post={post}/>\r\n                    <Divider style={{margin: '20px 0'}}/>\r\n                </div>\r\n                <div className={classes.imageSection}>\r\n                    <img src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} className={classes.media} />\r\n                </div>\r\n            </div>\r\n            {\r\n                recposts.length > 0 && (\r\n                    <div className={classes.section}>\r\n                        <Typography gutterbottom='true' variant='h5' className={classes.heading}>You might also like</Typography>\r\n                        <Divider />\r\n                        <div className={classes.recommendedPosts}>\r\n                            {recposts.map(({title, message, likes, selectedFile, name, _id}) => (\r\n                                <div style={{margin: '20px', cursor: 'pointer'}} onClick={() => openPost(_id)} key={_id}>\r\n                                    <Typography gutterbottom='true' variant='h6' className={classes.heading}>{title}</Typography>\r\n                                    <Typography gutterbottom='true' variant='subtitle2' className={classes.mb}>{name}</Typography>\r\n                                    <Typography gutterbottom='true' variant='subtitle1'>Likes: {likes.length}</Typography>\r\n                                    <img src={selectedFile} alt=\"Post Image\" width='200px' height='200px' className={classes.recImage}/> \r\n                                </div>\r\n                            )).splice(0,3)}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </Paper>\r\n        \r\n    )\r\n}\r\n\r\nexport default PostDetails;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\PostDetails\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Openers\\Openers.js",["169","170"],"import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { Form, SearchForm } from '../index';\r\nimport './Openers.css';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst Openers = ({ currentId, setCurrentId, user }) => {\r\n\r\n  const openFormModal = () => {\r\n    const formModal = document.querySelectorAll('.modal')[0];\r\n    formModal.style.transform = 'scale(1)';\r\n  }\r\n\r\n  const closeFormModal = () => {\r\n    const formModal = document.querySelectorAll('.modal')[0];\r\n    formModal.style.transform = 'scale(0)';\r\n  }\r\n\r\n  const openSearchModal = () => {\r\n    const searchModal = document.querySelectorAll('.modal')[1];\r\n    searchModal.style.transform = 'scale(1)';\r\n  }\r\n\r\n  const closeSearchModal = () => {\r\n    const searchModal = document.querySelectorAll('.modal')[1];\r\n    searchModal.style.transform = 'scale(0)';\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"openers\">\r\n        <div className=\"opener-container\" onClick={openFormModal}><div className=\"opener-icon\"><AddCircleIcon /></div>Add a glimpse</div>\r\n        <div className=\"opener-container\" onClick={openSearchModal}><div className=\"opener-icon\"><SearchIcon /></div>Search</div>\r\n      </div>\r\n      <div className=\"modal\">\r\n        <button className=\"modal-close-button\" onClick={closeFormModal}>\r\n          <CloseIcon />\r\n        </button>\r\n        <div className=\"form\">\r\n          <Form currentId={currentId} setCurrentId={setCurrentId} user={user} />\r\n        </div>\r\n      </div>\r\n      <div className=\"modal\" >\r\n        <button className=\"modal-close-button\" onClick={closeSearchModal}>\r\n          <CloseIcon />\r\n        </button>\r\n        <div className=\"form\">\r\n          <SearchForm />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Openers;","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\SearchForm\\SearchForm.js",["171","172","173"],"//Hooks\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\n//Styles\r\nimport useStyles from './styles';\r\n\r\n//Material-ui Components\r\nimport { AppBar, TextField, Button } from '@material-ui/core';\r\n\r\n//Redux components\r\nimport { useDispatch } from 'react-redux'; //Allows dispatching actions\r\nimport { getPostsBySearch } from '../../actions/posts';\r\n\r\n//To search and To get the current page address and to decide where to send\r\nimport ChipInput from 'material-ui-chip-input';\r\n\r\n//This function can be used as a hook\r\nconst useQuery = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst SearchForm = () => {\r\n    const [search, setSearch] = useState('');\r\n    const [tags, setTags] = useState([]);\r\n    \r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    \r\n    //Search related variables\r\n    const query = useQuery();//To get the page info\r\n    const history = useHistory();\r\n    const page = query.get('page') || 1; \r\n    const location = useLocation();\r\n    \r\n    //Give value to the variable only if there is 'page' string in the URL or Give it the first page\r\n    const searchQuery = query.get('searchQuery');\r\n    \r\n    const handleKeyPress = (event) => {  \r\n        if(event.which === 13){\r\n            searchPost()\r\n        }\r\n    }\r\n\r\n    const handleAdd = (tag) => {\r\n        setTags([...tags, tag])\r\n    }\r\n\r\n    const handleDelete = (tagToDelete) => {\r\n        setTags(tags.filter((tag) => tag !== tagToDelete))\r\n    }\r\n\r\n    const searchPost = () => {\r\n        if(search.trim() === '' && tags.join(',')  === ''){\r\n            history.push('/posts');\r\n        }else{\r\n            dispatch(getPostsBySearch({ search, tags: tags.join(',') }));\r\n            history.push( `${location.pathname}/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`);\r\n        }\r\n    }\r\n\r\n  return (\r\n    <AppBar className={classes.appBarSearch} position='static' color=\"inherit\">\r\n        <TextField\r\n            name=\"search\"\r\n            variant=\"outlined\"\r\n            label=\"Search Memories\"\r\n            fullWidth\r\n            value={search}\r\n            onChange={(event) => {setSearch(event.target.value)}}\r\n            onKeyUp={handleKeyPress}\r\n        />\r\n        <ChipInput\r\n            style={{margin: '10px 0px'}}\r\n            value={tags}\r\n            onAdd={handleAdd}\r\n            onDelete={handleDelete}\r\n            label=\"Search Tags\"\r\n            variant=\"outlined\"\r\n        />\r\n        <Button onClick={searchPost} className={classes.searchButton} variant=\"contained\" color=\"primary\">\r\n            Search\r\n        </Button>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default SearchForm;","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\SearchForm\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\PostDetails\\CommentSection.js",["174"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport { Typography, TextField, Button } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { commentPost } from '../../actions/posts';\r\n\r\nimport useStyles  from './styles';\r\n\r\nconst CommentSection = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  const classes = useStyles(); \r\n  const [comments, setComments] = useState(post?.comments);\r\n  const [comment, setComment] = useState('');\r\n  const commentsRef = useRef();\r\n\r\n  const handleClick = async () => {\r\n    const finalComment = `${user?.result?.name}: ${comment}`;\r\n    \r\n    const newComments = await dispatch(commentPost(finalComment, post._id));\r\n\r\n    setComments(newComments);\r\n    setComment('');\r\n\r\n    commentsRef.current.scrollIntoView({ behavior: 'smooth' });\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={classes.commentsOuterContainer}>\r\n        <div className={classes.commentsInnerContainer}>\r\n          <Typography gutterBottom variant='h6' className={classes.heading}>Comments</Typography>\r\n          {\r\n            comments.length ? (comments.map((comment, index) => (\r\n              <Typography variant='subtitle1' key={index} gutterBottom>\r\n                <strong>{comment.split(':')[0]}</strong>\r\n                {': '  + comment.split(':')[1]}\r\n              </Typography>\r\n            ))) : (\r\n              <Typography variant='subtitle2' gutterBottom>\r\n                No comments...\r\n              </Typography>\r\n            )\r\n          }\r\n          <div ref={commentsRef}/>\r\n        </div>\r\n        {\r\n          user?.result?.name ? (\r\n            <div style={{width: '60%', padding: '10px'}}>\r\n              <Typography gutterBottom variant='h6' className={classes.heading}>Write a Comment</Typography>\r\n              <TextField \r\n                fullWidth\r\n                rows={4}\r\n                variant='outlined' \r\n                label='Comment'\r\n                multiline\r\n                value={comment}\r\n                onChange={event => setComment(event.target.value)}\r\n              />\r\n              <Button style={{marginTop: '10px'}}  fullWidth disabled={!comment} variant='contained' onClick={handleClick} color='primary'>\r\n                Add Comment\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n              <div className={classes.loginMessage + \" \" + classes.heading}>\r\n                Login to comment...\r\n              </div>\r\n          )\r\n        }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentSection;","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\Likes.js",["175","176"],"//Subcomponent for POST component - Likes\r\nimport React, { useState, useEffect } from 'react';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\r\n\r\nconst Likes = ({post, likes, hasLiked}) => {\r\n\r\n    if (likes?.length > 0) {\r\n        return hasLiked\r\n            ? (\r\n                <>\r\n                    <div className=\"tooltip\">\r\n                        <ThumbUpAltIcon fontSize=\"medium\" />\r\n                        <div className=\"tooltipText\" id=\"likes\">\r\n                            {likes.length > 2 ? `You and ${likes.length - 1} others` : `${likes.length} like${likes.length > 1 ? 's' : ''}`}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <div className=\"tooltip\">\r\n                        <ThumbUpAltOutlined fontSize=\"medium\" />\r\n                        <div className=\"tooltipText\" id=\"likes\">\r\n                            {likes.length} {likes.length === 1 ? 'Like' : 'Likes'}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            );\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"tooltip\">\r\n                <ThumbUpAltOutlined fontSize=\"medium\" />\r\n                <div className=\"tooltipText\" id=\"likes\">\r\n                    {likes.length} {likes.length === 1 ? 'Like' : 'Likes'}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )           \r\n};\r\nexport default Likes;",{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":60,"column":75,"nodeType":"183","messageId":"184","endLine":60,"endColumn":76},{"ruleId":"185","severity":1,"message":"186","line":7,"column":34,"nodeType":"187","messageId":"188","endLine":7,"endColumn":39},{"ruleId":"185","severity":1,"message":"189","line":18,"column":11,"nodeType":"187","messageId":"188","endLine":18,"endColumn":18},{"ruleId":"177","replacedBy":"190"},{"ruleId":"179","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":24,"column":5,"nodeType":"194","messageId":"195","endLine":24,"endColumn":11},{"ruleId":"192","severity":1,"message":"196","line":28,"column":5,"nodeType":"194","messageId":"195","endLine":28,"endColumn":19},{"ruleId":"185","severity":1,"message":"197","line":2,"column":27,"nodeType":"187","messageId":"188","endLine":2,"endColumn":36},{"ruleId":"185","severity":1,"message":"198","line":2,"column":30,"nodeType":"187","messageId":"188","endLine":2,"endColumn":37},{"ruleId":"185","severity":1,"message":"199","line":2,"column":39,"nodeType":"187","messageId":"188","endLine":2,"endColumn":45},{"ruleId":"200","severity":1,"message":"201","line":53,"column":8,"nodeType":"202","endLine":53,"endColumn":18,"suggestions":"203"},{"ruleId":"200","severity":1,"message":"204","line":19,"column":8,"nodeType":"202","endLine":19,"endColumn":12,"suggestions":"205"},{"ruleId":"200","severity":1,"message":"204","line":24,"column":8,"nodeType":"202","endLine":24,"endColumn":14,"suggestions":"206"},{"ruleId":"207","severity":1,"message":"208","line":68,"column":37,"nodeType":"209","endLine":68,"endColumn":137},{"ruleId":"185","severity":1,"message":"210","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":25},{"ruleId":"185","severity":1,"message":"199","line":2,"column":10,"nodeType":"187","messageId":"188","endLine":2,"endColumn":16},{"ruleId":"185","severity":1,"message":"197","line":2,"column":27,"nodeType":"187","messageId":"188","endLine":2,"endColumn":36},{"ruleId":"185","severity":1,"message":"211","line":33,"column":11,"nodeType":"187","messageId":"188","endLine":33,"endColumn":15},{"ruleId":"185","severity":1,"message":"212","line":37,"column":11,"nodeType":"187","messageId":"188","endLine":37,"endColumn":22},{"ruleId":"185","severity":1,"message":"197","line":1,"column":35,"nodeType":"187","messageId":"188","endLine":1,"endColumn":44},{"ruleId":"185","severity":1,"message":"210","line":2,"column":17,"nodeType":"187","messageId":"188","endLine":2,"endColumn":25},{"ruleId":"185","severity":1,"message":"197","line":2,"column":27,"nodeType":"187","messageId":"188","endLine":2,"endColumn":36},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'message' is assigned a value but never used.",["213"],["214"],"no-dupe-keys","Duplicate key 'height'.","ObjectExpression","unexpected","Duplicate key 'textDecoration'.","'useEffect' is defined but never used.","'Toolbar' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout', 'setUser', and 'user?.token'. Either include them or remove the dependency array. If 'setUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["215"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["216"],["217"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useState' is defined but never used.","'page' is assigned a value but never used.","'searchQuery' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [location, logout, setUser, user?.token]",{"range":"224","text":"225"},"Update the dependencies array to be: [dispatch, id]",{"range":"226","text":"227"},"Update the dependencies array to be: [dispatch, post]",{"range":"228","text":"229"},[2020,2030],"[location, logout, setUser, user?.token]",[736,740],"[dispatch, id]",[883,889],"[dispatch, post]"]