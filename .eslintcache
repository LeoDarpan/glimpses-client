[{"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\index.js":"1","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\App.js":"2","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\Form.js":"3","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Posts.js":"4","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\Post.js":"5","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\styles.js":"6","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\styles.js":"7","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\styles.js":"8","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\styles.js":"9","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\index.js":"10","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\posts.js":"11","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\actions\\posts.js":"12","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\api\\index.js":"13","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\index.js":"14","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Navbar\\styles.js":"15","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Home\\styles.js":"16","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\styles.js":"17","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Auth.js":"18","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Home\\Home.js":"19","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Navbar\\Navbar.js":"20","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Input.js":"21","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Icon.js":"22","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\auth.js":"23","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\constants\\actionTypes.js":"24","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\actions\\auth.js":"25","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Pagination\\Pagination.jsx":"26","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Pagination\\styles.js":"27","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\PostDetails\\PostDetails.jsx":"28","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\PostDetails\\styles.js":"29","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Openers\\Openers.js":"30","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\SearchForm\\SearchForm.js":"31","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\SearchForm\\styles.js":"32"},{"size":495,"mtime":1638438324120,"results":"33","hashOfConfig":"34"},{"size":1580,"mtime":1647261811154,"results":"35","hashOfConfig":"34"},{"size":4306,"mtime":1647242860146,"results":"36","hashOfConfig":"34"},{"size":1152,"mtime":1647249288622,"results":"37","hashOfConfig":"34"},{"size":5575,"mtime":1647261803786,"results":"38","hashOfConfig":"34"},{"size":540,"mtime":1638776944629,"results":"39","hashOfConfig":"40"},{"size":657,"mtime":1647242857686,"results":"41","hashOfConfig":"34"},{"size":428,"mtime":1645499110700,"results":"42","hashOfConfig":"34"},{"size":1080,"mtime":1646992957993,"results":"43","hashOfConfig":"34"},{"size":150,"mtime":1645530252988,"results":"44","hashOfConfig":"34"},{"size":1611,"mtime":1645222348898,"results":"45","hashOfConfig":"34"},{"size":2851,"mtime":1647258809258,"results":"46","hashOfConfig":"34"},{"size":1332,"mtime":1647261186401,"results":"47","hashOfConfig":"34"},{"size":507,"mtime":1647244618223,"results":"48","hashOfConfig":"34"},{"size":1719,"mtime":1647235294082,"results":"49","hashOfConfig":"34"},{"size":336,"mtime":1647244763901,"results":"50","hashOfConfig":"34"},{"size":666,"mtime":1639058790524,"results":"51","hashOfConfig":"34"},{"size":6333,"mtime":1639546857028,"results":"52","hashOfConfig":"34"},{"size":1341,"mtime":1647249286149,"results":"53","hashOfConfig":"34"},{"size":5418,"mtime":1647238808370,"results":"54","hashOfConfig":"34"},{"size":1063,"mtime":1639120272770,"results":"55","hashOfConfig":"34"},{"size":512,"mtime":1639119643550,"results":"56","hashOfConfig":"34"},{"size":857,"mtime":1639481331105,"results":"57","hashOfConfig":"34"},{"size":462,"mtime":1645220149028,"results":"58","hashOfConfig":"34"},{"size":639,"mtime":1639480009833,"results":"59","hashOfConfig":"34"},{"size":1102,"mtime":1645530422943,"results":"60","hashOfConfig":"34"},{"size":214,"mtime":1647253298293,"results":"61","hashOfConfig":"34"},{"size":3784,"mtime":1645510231014,"results":"62","hashOfConfig":"34"},{"size":870,"mtime":1646893987844,"results":"63","hashOfConfig":"34"},{"size":1992,"mtime":1647249892088,"results":"64","hashOfConfig":"34"},{"size":2710,"mtime":1647261771081,"results":"65","hashOfConfig":"34"},{"size":336,"mtime":1647244701824,"results":"66","hashOfConfig":"34"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"go3x02",{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"69"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"tve4jg",{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"69"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"69"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"69"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\index.js",[],["140","141"],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\App.js",["142"],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\Form.js",["143"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\r\nimport FileBase from 'react-file-base64';\r\nimport useStyles from './styles';\r\nimport { useDispatch, useSelector } from 'react-redux'; //Import Dispatcher\r\nimport { createPost, updatePost } from '../../actions/posts';//Import Action from the actions\r\n\r\nconst Form = ({ currentId, setCurrentId, user }) => {\r\n    const dispatch = useDispatch();//Create dispatch\r\n    const history = useHistory();//To use redirect \r\n    const post = useSelector((state) => currentId ? state.data.posts.find(post => post._id === currentId) : null);\r\n    const classes = useStyles(); \r\n    const [postData, setPostData] = useState({\r\n        title: '',\r\n        message: '',\r\n        tags: '',\r\n        selectedFile: ''\r\n    });\r\n\r\n    const clear = () => {\r\n        setCurrentId(0);\r\n        setPostData({\r\n            title: '',\r\n            message: '',\r\n            tags: '',\r\n            selectedFile: ''\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(post) setPostData(post); \r\n    }, [post])\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if( currentId ){\r\n            dispatch(updatePost(currentId, {...postData, name: user?.result?.name}, history));\r\n            clear();\r\n        }else{\r\n            dispatch(createPost({...postData, name: user?.result?.name }, history));\r\n            //Dispatch action here\r\n            history.push('/posts')\r\n            clear();\r\n        }\r\n    }\r\n\r\n    if(!user?.result?.name){\r\n        return (\r\n            <Paper className={classes.paper + \" \" + classes.box} elevation={6}>\r\n                <Typography variable='h5' align='center'>\r\n                    Please <Link to='/auth'>Sign In</Link> to share your Glimpses or like other's.\r\n                </Typography>\r\n            </Paper>\r\n        )\r\n    }\r\n    return (\r\n        <Paper className = { classes.paper } elevation={6}>\r\n            <form autoComplete = 'off' noValidate className = { `${classes.root} ${classes.form}` } onSubmit = { handleSubmit }>\r\n                <Typography variant = \"h5\" className={'gradient__text__1' + \" \" + classes.headingFont}>{currentId ? \"Edit\" : \"Create\"} a Glimpse</Typography>\r\n                <TextField\r\n                    name = 'title'\r\n                    variant = 'outlined'\r\n                    label = 'Title'\r\n                    fullWidth\r\n                    value = { postData.title }\r\n                    //In order to setState using an object -\r\n                    onChange = { (e) => setPostData({ ...postData, title: e.target.value }) }\r\n                />\r\n                <TextField\r\n                    name = 'message'\r\n                    variant = 'outlined'\r\n                    label = 'Message'\r\n                    fullWidth \r\n                    multiline\r\n                    rows={4}\r\n                    value = { postData.message }\r\n                    //In order to setState using an object -\r\n                    onChange = { (e) => setPostData({ ...postData, message: e.target.value }) }\r\n                />\r\n                <TextField\r\n                    name = 'tags'\r\n                    variant = 'outlined'\r\n                    label = 'Tags(comma separated)'\r\n                    fullWidth\r\n                    value = { postData.tags }\r\n                    //In order to setState using an object -\r\n                    onChange = { (e) => setPostData({ ...postData, tags: e.target.value.split(',') }) }\r\n                />\r\n                <div className = { classes.fileInput}>\r\n                    <FileBase \r\n                        type = \"file\"\r\n                        multiple = { false }\r\n                        onDone = {({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}\r\n                    />\r\n                </div>\r\n                <Button className = { classes.buttonSubmit } variant = 'contained' color = 'primary' size = 'large' type = 'submit' fullWidth>Submit</Button>\r\n                <Button variant = 'contained' color = 'secondary' size = 'small' onClick = { clear } fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n};\r\nexport default Form;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Posts.js",["144"],"import React from 'react';\r\nimport useStyles from './styles';\r\nimport Post from './Post/Post';\r\nimport '../../App.css';\r\n\r\nimport { Grid, CircularProgress, Paper } from '@material-ui/core';\r\n\r\nimport { useSelector } from 'react-redux';//A hook to fetch data from the global redux store\r\n\r\nfunction Posts({ setCurrentId }) {\r\n    const { posts, isLoading } = useSelector((state) => state.data);\r\n    const classes = useStyles();\r\n\r\n    if(!posts.length && !isLoading) return 'Nothing to show...';\r\n\r\n    return (\r\n        isLoading ? (\r\n            <div className={classes.loadingPaper}>\r\n                <CircularProgress size='7em' />\r\n            </div>\r\n        ) : (\r\n            <Grid className={classes.container} container item={true} alignItems='stretch' spacing={3} >\r\n                {\r\n                    posts.map((post) => (\r\n                        <Grid item key={post._id} xs={12} sm={12} md={6} lg={3}>\r\n                            <Post post={post} setCurrentId={setCurrentId}/>\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n        )\r\n        \r\n    )\r\n}\r\n\r\nexport default Posts;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\Post.js",["145"],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\styles.js",[],["146","147"],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\index.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\posts.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\actions\\posts.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\api\\index.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\index.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Navbar\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Home\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Auth.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Home\\Home.js",["148"],"//Hooks\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\n//Material-ui Components\r\nimport { Container, Grow, Grid } from '@material-ui/core';\r\n\r\n//Styles\r\nimport useStyles from './styles';\r\n\r\n//Components\r\nimport { Posts, Pagination, Openers } from '../index';\r\n\r\n//This function can be used as a hook\r\nconst useQuery = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst Home = ({ user }) => {\r\n    const [currentId, setCurrentId] = useState(null);\r\n    const classes = useStyles();\r\n    const query = useQuery();\r\n    const page = query.get('page') || 1; \r\n\r\n    return (\r\n        <div>\r\n            <Grow in> \r\n                    <Container maxWidth=\"xl\">\r\n                        <Grid container item={true} justifyContent = 'space-between' alignItems = 'stretch' spacing = {3} className={classes.mainContainer}>\r\n                            <Grid item={true} xs={12} sm={6} md={12} >\r\n                                <Posts setCurrentId={setCurrentId}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n            </Grow>\r\n            <Openers currentId={currentId} setCurrentId={setCurrentId} user={user} />\r\n            <Pagination page={page} /> \r\n        </div>\r\n    )\r\n}\r\nexport default Home;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Navbar\\Navbar.js",["149","150","151"],"import React, { useEffect, useState } from 'react';\r\nimport { Avatar, Typography, Toolbar, Button } from '@material-ui/core';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport useStyles from './styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actionType from '../../constants/actionTypes';\r\nimport decode from 'jwt-decode';\r\nimport LoginRoundedIcon from '@mui/icons-material/LoginRounded';\r\nimport LogoutRoundedIcon from '@mui/icons-material/LoginRounded';\r\nimport BungalowRoundedIcon from '@mui/icons-material/BungalowRounded';\r\nimport KeyboardArrowDownRoundedIcon from '@mui/icons-material/KeyboardArrowDownRounded';\r\nimport './style.css';\r\n\r\nconst Navbar = ({ user, setUser }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory('');\r\n    const location = useLocation();\r\n    const [clicked, setClicked] = useState(false);\r\n\r\n    //Immediately get the user from the localstorage if exists\r\n    //User goes into the localstorage once google signed in\r\n    \r\n    const logout = () => {\r\n        console.log('Logging out');\r\n        dispatch({ type: actionType.LOGOUT});\r\n        history.push('/');\r\n        setUser(null);\r\n    }\r\n\r\n    const handleUser = () => {\r\n        const userBox = document.querySelector(\".user-actions\");\r\n        const downIcon = document.querySelector(\".down-icon\");\r\n        if(!clicked){\r\n            setClicked(true);\r\n            userBox.style.transform = \"scaleY(1)\";\r\n            downIcon.style.transform = \"rotate(180deg)\";\r\n        }else{\r\n            setClicked(false);\r\n            userBox.style.transform = \"scaleY(0)\";\r\n            downIcon.style.transform = \"rotate(0deg)\";\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const token = user?.token;\r\n        if(token) {\r\n            const decodedToken = decode(token);\r\n\r\n            if(decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n        }\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n    }, [location]);\r\n\r\n    return (\r\n        <div>\r\n            <div className = { classes.appBar } position = \"static\" color = 'inherit'>\r\n                <div className={classes.toolbar}>\r\n                    <div className='icon-box'>\r\n                        {/* <Button component={Link} to ='/auth' variant='contained' color='primary'><LoginRoundedIcon className=\"icon\" /></Button> */}\r\n                        <Link to ='/' className={classes.link + \"link\"}>\r\n                            <BungalowRoundedIcon className=\"icon\" />\r\n                        </Link>\r\n                        <div className=\"tooltip\" style={{left: \"-15px\", top: \"45px\"}} >HOME</div>\r\n                    </div>\r\n                </div>\r\n                <div className={ classes.brandContainer }>\r\n                    <Typography className={classes.appHeading} component={Link} to='/'>\r\n                        Glimpses\r\n                    </Typography>\r\n                </div>\r\n                <div className={classes.toolbar}>\r\n                    {\r\n                        user ? (\r\n                            <div className={classes.profile}>\r\n                                <div className={classes.user} onClick={handleUser}>\r\n                                    <Avatar className={classes.purple} alt={user.result.name} src={user.result.imageUrl}>\r\n                                        {user.result.name.charAt(0)}\r\n                                    </Avatar>\r\n                                    <KeyboardArrowDownRoundedIcon className=\"down-icon\"/>\r\n                                    <div className=\"user-actions\">\r\n                                        <h2 className={classes.userName}>\r\n                                            {\r\n                                                user.result.name\r\n                                            }\r\n                                        </h2>\r\n                                        <div className='icon-box'>\r\n                                            <div className={classes.link + \"link\"}>\r\n                                                <LogoutRoundedIcon className=\"icon logout-icon\" onClick={ logout } />\r\n                                            </div>\r\n                                            <div className=\"tooltip tooltip-logout\">LOGOUT</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {/* <Button variant='contained' className={classes.logout} color='secondary' onClick={ logout }>Logout</Button> */}\r\n                                \r\n                            </div>\r\n                        ) : (\r\n                            <div className='icon-box'>\r\n                                {/* <Button component={Link} to ='/auth' variant='contained' color='primary'><LoginRoundedIcon className=\"icon\" /></Button> */}\r\n                                <Link to ='/auth' className={classes.link + \"link\"}>\r\n                                    <LoginRoundedIcon className=\"icon\" />\r\n                                </Link>\r\n                                <div className=\"tooltip\">SIGN IN</div>\r\n                            </div>\r\n                            \r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Input.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Icon.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\auth.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\constants\\actionTypes.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\actions\\auth.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Pagination\\Pagination.jsx",["152"],"import React, { useEffect } from 'react';\r\n\r\n//Redux components\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { getPosts } from '../../actions/posts';\r\n\r\n//Material-ui components\r\nimport { Pagination, PaginationItem } from '@material-ui/lab';\r\n\r\nimport useStyles from './styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Paginate = ({page}) => {\r\n    \r\n    const { totalPages } = useSelector((state) => state.data);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    \r\n    useEffect(() => {\r\n        if(page) dispatch(getPosts(page));\r\n    }, [page])\r\n    \r\n    return (\r\n        <Pagination \r\n            classes={{ ul: classes.ul }}\r\n            count={totalPages}\r\n            page={Number(page) || 1}\r\n            variant='outlined'\r\n            color='primary'\r\n            renderItem={(item) => (\r\n                //Every item will be a link to the next page with more posts to show\r\n                <PaginationItem {...item} component={Link} to={`/posts?page=${item.page}`}/> \r\n            )}\r\n        />\r\n    )\r\n}\r\nexport default Paginate;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Pagination\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\PostDetails\\PostDetails.jsx",["153","154","155"],"import React, { useEffect } from 'react';\r\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { useParams, useHistory } from 'react-router-dom'; \r\nimport useStyles from './styles';\r\n\r\nimport { getPost, getPostsBySearch } from '../../actions/posts';\r\n\r\nconst PostDetails = () => {\r\n    const { post, posts, isLoading } = useSelector((state) => state.data);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    const { id } = useParams();\r\n    \r\n    useEffect(() => {\r\n        dispatch(getPost(id));\r\n    }, [id]);\r\n\r\n    useEffect(() => {\r\n        if(post)\r\n            dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }));\r\n    }, [post]);\r\n\r\n    const openPost = (_id) => history.push(`/posts/${_id}`)\r\n\r\n    if(!post) return null;\r\n\r\n    if(isLoading){\r\n        return (\r\n            <Paper elevation={6} className={classes.loadingPaper}>\r\n                <CircularProgress size='7em' />\r\n            </Paper>\r\n            );\r\n    }\r\n\r\n    const recposts = posts.filter(({_id}) => _id !== post._id);\r\n\r\n    return (\r\n        <Paper style={{padding: '20px', borderRadius: '15px'}}>\r\n            <div className={ classes.card }>\r\n                <div className={classes.section}>\r\n                    <Typography variant='h3' component='h2'>{post.title}</Typography>\r\n                    <Typography variant='h6' gutterbottom='true' color='textSecondary' component='h2'>{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n                    <Typography variant='body1' gutterbottom='true' component='p'>{post.message}</Typography>\r\n                    <Typography variant='h6'>Created by: {post.name}</Typography>\r\n                    <Typography variant='body1'>{moment(post.createdAt).fromNow()}</Typography>\r\n                    <Divider style={{margin: '20px 0'}}/>\r\n                    <Typography variant='body1'><strong>Comments - coming soon!</strong></Typography>\r\n                    <Divider style={{margin: '20px 0'}}/>\r\n                </div>\r\n                <div className={classes.imageSection}>\r\n                    <img src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} className={classes.media} />\r\n                </div>\r\n            </div>\r\n            {\r\n                recposts.length > 0 && (\r\n                    <div className={classes.section}>\r\n                        <Typography gutterbottom='true' variant='h5'>You might also like</Typography>\r\n                        <Divider />\r\n                        <div className={classes.recommendedPosts}>\r\n                            {recposts.map(({title, message, likes, selectedFile, name, _id}) => (\r\n                                <div style={{margin: '20px', cursor: 'pointer'}} onClick={() => openPost(_id)} key={_id}>\r\n                                    <Typography gutterbottom='true' variant='h6'>{title}</Typography>\r\n                                    <Typography gutterbottom='true' variant='subtitle2'>{name}</Typography>\r\n                                    <Typography gutterbottom='true' variant='subtitle2'>{message}</Typography>\r\n                                    <Typography gutterbottom='true' variant='subtitle1'>Likes: {likes.length}</Typography>\r\n                                    <img src={selectedFile} alt=\"Post Image\" width='200px'/> \r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </Paper>\r\n        \r\n    )\r\n}\r\n\r\nexport default PostDetails;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\PostDetails\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Openers\\Openers.js",["156","157"],"import React, { useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { Form, SearchForm } from '../index';\r\nimport './Openers.css';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst Openers = ({ currentId, setCurrentId, user}) => {\r\n\r\n    const openFormModal = () => {\r\n      const formModal = document.querySelectorAll('.modal')[0];\r\n      formModal.style.transform = 'scale(1)';\r\n    }\r\n\r\n    const closeFormModal = () => {\r\n      const formModal = document.querySelectorAll('.modal')[0];\r\n      formModal.style.transform = 'scale(0)';\r\n    }\r\n\r\n    const openSearchModal = () => {\r\n      const searchModal = document.querySelectorAll('.modal')[1];\r\n      searchModal.style.transform = 'scale(1)';\r\n    }\r\n\r\n    const closeSearchModal = () => {\r\n      const searchModal = document.querySelectorAll('.modal')[1];\r\n      searchModal.style.transform = 'scale(0)';\r\n    }\r\n    \r\n    return (\r\n      <div>\r\n        <div className=\"openers\">\r\n          <div className=\"opener-container\" onClick={openFormModal}><div className=\"opener-icon\"><AddCircleIcon /></div>Add a glimpse</div>\r\n          <div className=\"opener-container\" onClick={openSearchModal}><div className=\"opener-icon\"><SearchIcon /></div>Search</div>\r\n        </div>\r\n        <div className=\"modal\">\r\n          <button className=\"modal-close-button\" onClick={closeFormModal}>\r\n            <CloseIcon />\r\n          </button>\r\n          <div className=\"form\">\r\n            <Form currentId={currentId} setCurrentId={setCurrentId} user={user}/>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal\" >\r\n          <button className=\"modal-close-button\" onClick={closeSearchModal}>\r\n            <CloseIcon />\r\n          </button>\r\n          <div className=\"form\">\r\n            <SearchForm />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Openers;","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\SearchForm\\SearchForm.js",["158","159","160"],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\SearchForm\\styles.js",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":7,"column":43,"nodeType":"167","messageId":"168","endLine":7,"endColumn":50},{"ruleId":"169","severity":1,"message":"170","line":60,"column":75,"nodeType":"171","messageId":"172","endLine":60,"endColumn":76},{"ruleId":"165","severity":1,"message":"173","line":6,"column":34,"nodeType":"167","messageId":"168","endLine":6,"endColumn":39},{"ruleId":"165","severity":1,"message":"174","line":19,"column":11,"nodeType":"167","messageId":"168","endLine":19,"endColumn":18},{"ruleId":"161","replacedBy":"175"},{"ruleId":"163","replacedBy":"176"},{"ruleId":"165","severity":1,"message":"177","line":2,"column":27,"nodeType":"167","messageId":"168","endLine":2,"endColumn":36},{"ruleId":"165","severity":1,"message":"178","line":2,"column":30,"nodeType":"167","messageId":"168","endLine":2,"endColumn":37},{"ruleId":"165","severity":1,"message":"179","line":2,"column":39,"nodeType":"167","messageId":"168","endLine":2,"endColumn":45},{"ruleId":"180","severity":1,"message":"181","line":53,"column":8,"nodeType":"182","endLine":53,"endColumn":18,"suggestions":"183"},{"ruleId":"180","severity":1,"message":"184","line":21,"column":8,"nodeType":"182","endLine":21,"endColumn":14,"suggestions":"185"},{"ruleId":"180","severity":1,"message":"184","line":19,"column":8,"nodeType":"182","endLine":19,"endColumn":12,"suggestions":"186"},{"ruleId":"180","severity":1,"message":"184","line":24,"column":8,"nodeType":"182","endLine":24,"endColumn":14,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":69,"column":37,"nodeType":"190","endLine":69,"endColumn":93},{"ruleId":"165","severity":1,"message":"191","line":1,"column":17,"nodeType":"167","messageId":"168","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"179","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":16},{"ruleId":"165","severity":1,"message":"177","line":2,"column":27,"nodeType":"167","messageId":"168","endLine":2,"endColumn":36},{"ruleId":"165","severity":1,"message":"192","line":33,"column":11,"nodeType":"167","messageId":"168","endLine":33,"endColumn":15},{"ruleId":"165","severity":1,"message":"193","line":37,"column":11,"nodeType":"167","messageId":"168","endLine":37,"endColumn":22},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'Openers' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'Paper' is defined but never used.","'message' is assigned a value but never used.",["194"],["195"],"'useEffect' is defined but never used.","'Toolbar' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout', 'setUser', and 'user?.token'. Either include them or remove the dependency array. If 'setUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["196"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["197"],["198"],["199"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useState' is defined but never used.","'page' is assigned a value but never used.","'searchQuery' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},"Update the dependencies array to be: [location, logout, setUser, user?.token]",{"range":"208","text":"209"},"Update the dependencies array to be: [dispatch, page]",{"range":"210","text":"211"},"Update the dependencies array to be: [dispatch, id]",{"range":"212","text":"213"},"Update the dependencies array to be: [dispatch, post]",{"range":"214","text":"215"},[2019,2029],"[location, logout, setUser, user?.token]",[596,602],"[dispatch, page]",[690,694],"[dispatch, id]",[837,843],"[dispatch, post]"]