[{"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\index.js":"1","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\App.js":"2","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\Form.js":"3","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Posts.js":"4","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\Post.js":"5","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\styles.js":"6","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\styles.js":"7","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\styles.js":"8","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\styles.js":"9","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\index.js":"10","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\posts.js":"11","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\actions\\posts.js":"12","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\api\\index.js":"13","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\index.js":"14","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\constants\\actionConstants.js":"15"},{"size":495,"mtime":1638438324120,"results":"16","hashOfConfig":"17"},{"size":1941,"mtime":1638786012603,"results":"18","hashOfConfig":"17"},{"size":4255,"mtime":1638886184362,"results":"19","hashOfConfig":"17"},{"size":988,"mtime":1638883320382,"results":"20","hashOfConfig":"17"},{"size":3175,"mtime":1638884836042,"results":"21","hashOfConfig":"17"},{"size":540,"mtime":1638776944629,"results":"22","hashOfConfig":"17"},{"size":540,"mtime":1638776871875,"results":"23","hashOfConfig":"17"},{"size":278,"mtime":1638355424580,"results":"24","hashOfConfig":"17"},{"size":1175,"mtime":1638955555551,"results":"25","hashOfConfig":"17"},{"size":117,"mtime":1634626826138,"results":"26","hashOfConfig":"17"},{"size":929,"mtime":1638785966697,"results":"27","hashOfConfig":"17"},{"size":1611,"mtime":1638786023009,"results":"28","hashOfConfig":"17"},{"size":550,"mtime":1638889351887,"results":"29","hashOfConfig":"17"},{"size":97,"mtime":1638353489529,"results":"30","hashOfConfig":"17"},{"size":163,"mtime":1638785996702,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"tve4jg",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\index.js",[],["66","67"],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\App.js",["68"],"import React, { useEffect, useState } from 'react';\r\nimport \"./App.css\";\r\n\r\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux'; //Allows dispatching actions\r\n\r\nimport { getPosts } from './actions/posts';\r\n\r\nimport { Form, Posts } from './components';\r\n\r\nimport useStyles from './styles';\r\n\r\nfunction App() {\r\n    const [currentId, setCurrentId] = useState(null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect( () => {\r\n        dispatch( getPosts() );//Successful dispatch.\r\n    }, [ dispatch ])\r\n\r\n    return (\r\n        <div>\r\n            <Container  maxWidth = 'lg'>\r\n                <AppBar className = { classes.appBar } position = \"static\" color = 'inherit'>\r\n                    <Typography className={'gradient__text' +  \" \" + classes.appHeading} variant = \"h2\">\r\n                        Glimpses\r\n                    </Typography>\r\n                    <img className = { classes.image } src= 'https://www.pinclipart.com/picdir/middle/97-976108_face-clipart-minion-minion-avatar-png-download.png' alt=\"Glimpses\" height = '60' width = '60'/>\r\n                </AppBar>\r\n                <Grow in> \r\n                    <Container>\r\n                        <Grid container item={true} justifyContent = 'space-between' alignItems = 'stretch' spacing = {3} className={classes.mainContainer}>\r\n                            <Grid item={true} xs = {12} sm = {7}>\r\n                                <Posts setCurrentId={setCurrentId}/>\r\n                            </Grid>\r\n                            <Grid item={true} xs = {12} sm = {4}>\r\n                                <Form currentId={currentId} setCurrentId={setCurrentId}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                </Grow>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\nexport default App;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\Form.js",["69"],"import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\r\nimport FileBase from 'react-file-base64';\r\nimport useStyles from './styles';\r\nimport { useDispatch, useSelector } from 'react-redux'; //Import Dispatcher\r\nimport { createPost, updatePost } from '../../actions/posts';//Import Action from the actions\r\n\r\nfunction Form({ currentId, setCurrentId }) {\r\n    const dispatch = useDispatch();//Create dispatch\r\n    const post = useSelector((state) => currentId ? state.posts.find(post => post._id === currentId) : null);\r\n    const classes = useStyles();\r\n    const [postData, setPostData] = useState({\r\n        creator: '',\r\n        title: '',\r\n        message: '',\r\n        tags: '',\r\n        selectedFile: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        if(post) setPostData(post); \r\n    }, [post])\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(currentId){\r\n            dispatch(updatePost(currentId, postData))\r\n        }else{\r\n            dispatch(createPost(postData));//Dispatch action here\r\n        }\r\n        clear();\r\n    }\r\n\r\n    const clear = () => {\r\n        setCurrentId(null);\r\n        setPostData({\r\n            creator: '',\r\n            title: '',\r\n            message: '',\r\n            tags: '',\r\n            selectedFile: ''\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className = { classes.paper }>\r\n                <form autoComplete = 'off' noValidate className = { `${classes.root} ${classes.form}` } onSubmit = { handleSubmit }>\r\n                    <Typography variant = \"h4\" className={'gradient__text__1' + \" \" + classes.headingFont}>{currentId ? \"Edit\" : \"Create\"} a Glimpse</Typography>\r\n                    <TextField\r\n                        name = 'creator'\r\n                        variant = 'outlined'\r\n                        label = 'Creator'\r\n                        fullWidth\r\n                        value = { postData.creator }\r\n                        //In order to setState using an object -\r\n                        onChange = { (e) => setPostData({ ...postData, creator: e.target.value }) }\r\n                    />\r\n                    <TextField\r\n                        name = 'title'\r\n                        variant = 'outlined'\r\n                        label = 'Title'\r\n                        fullWidth\r\n                        value = { postData.title }\r\n                        //In order to setState using an object -\r\n                        onChange = { (e) => setPostData({ ...postData, title: e.target.value }) }\r\n                    />\r\n                    <TextField\r\n                        name = 'message'\r\n                        variant = 'outlined'\r\n                        label = 'Message'\r\n                        fullWidth\r\n                        value = { postData.message }\r\n                        //In order to setState using an object -\r\n                        onChange = { (e) => setPostData({ ...postData, message: e.target.value }) }\r\n                    />\r\n                    <TextField\r\n                        name = 'tags'\r\n                        variant = 'outlined'\r\n                        label = 'Tags'\r\n                        fullWidth\r\n                        value = { postData.tags }\r\n                        //In order to setState using an object -\r\n                        onChange = { (e) => setPostData({ ...postData, tags: e.target.value.split(',') }) }\r\n                    />\r\n                    <div className = { classes.fileInput}>\r\n                        <FileBase \r\n                            type = \"file\"\r\n                            multiple = { false }\r\n                            onDone = {({ base64 }) => setPostData({ ...postData, selectedFile: base64 })}\r\n                        />\r\n                    </div>\r\n                    <Button className = { classes.buttonSubmit } variant = 'contained' color = 'primary' size = 'large' type = 'submit' fullWidth>Submit</Button>\r\n                    <Button variant = 'contained' color = 'secondary' size = 'small' onClick = { clear } fullWidth>Clear</Button>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Posts.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\Post.js",["70"],"import React from 'react';\r\nimport useStyles from './styles';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\n//Initialise dispatch\r\nimport { useDispatch } from 'react-redux';\r\n//Import Action\r\nimport { deletePost, likePost } from '../../../actions/posts';\r\n\r\nfunction Post({ post, setCurrentId }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleDelete = () => {\r\n        dispatch(deletePost(post._id));\r\n    }\r\n    const handleLike = () => {\r\n        dispatch(likePost(post._id));\r\n    }\r\n    console.log(moment(post.createdAt).format('LLL'));\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title}>\r\n                <div className={classes.overlay}>\r\n                    <Typography variant='h6'>{post.creator}</Typography>\r\n                    <Typography variant='body2'>{moment(post.createdAt).format('lll')}</Typography>\r\n                </div>\r\n                <div className={classes.overlay2}>\r\n                    <Button \r\n                    style={{color: 'white'}} \r\n                    size='small' \r\n                    onClick={() => {\r\n                        setCurrentId(post._id);\r\n                    }}\r\n                    >\r\n                        <MoreHorizIcon fontSize='medium'/>\r\n                    </Button>\r\n                </div>\r\n                \r\n            </CardMedia>\r\n            <CardContent>\r\n                <div className={classes.details}>\r\n                    <Typography className={classes.title} variant='h5' gutterBottom>\r\n                        {post.title}\r\n                    </Typography> \r\n                </div>\r\n                <div className={classes.details}>\r\n                    <Typography variant='body2' color='textSecondary' component='p'>\r\n                        {post.message}\r\n                    </Typography>        \r\n                </div>\r\n                <div className={classes.details}>\r\n                    <Typography variant='body2' color='textSecondary'>\r\n                        {post.tags == '' ? null : post.tags.map((tag) => `#${tag} `)}\r\n                    </Typography>\r\n                </div>\r\n            </CardContent>\r\n            <CardActions className={classes.cardActions}>\r\n                <Button size='small' color='primary' onClick={ handleLike }>\r\n                    <ThumbUpAltIcon fontSize='small' style={{marginRight: '5px', position: 'relative', top: '-2px'}} />\r\n                    {'Like ' + post.likeCount}\r\n                </Button>\r\n                <Button size='small' color='primary' onClick={ handleDelete }>\r\n                    <DeleteIcon fontSize='small' style={{marginRight: '5px', position: 'relative', top: '-2px'}}/>\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default Post\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\index.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\posts.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\actions\\posts.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\api\\index.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\index.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\constants\\actionConstants.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":26,"column":61,"nodeType":"77","messageId":"78","endLine":26,"endColumn":62},{"ruleId":"75","severity":1,"message":"76","line":49,"column":79,"nodeType":"77","messageId":"78","endLine":49,"endColumn":80},{"ruleId":"79","severity":1,"message":"80","line":57,"column":36,"nodeType":"77","messageId":"81","endLine":57,"endColumn":38},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","eqeqeq","Expected '===' and instead saw '=='.","unexpected","no-global-assign","no-unsafe-negation"]