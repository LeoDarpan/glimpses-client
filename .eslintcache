[{"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\index.js":"1","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\App.js":"2","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\Form.js":"3","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Posts.js":"4","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\Post.js":"5","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\styles.js":"6","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\styles.js":"7","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\styles.js":"8","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\styles.js":"9","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\index.js":"10","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\posts.js":"11","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\actions\\posts.js":"12","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\api\\index.js":"13","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\index.js":"14","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Navbar\\styles.js":"15","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Home\\styles.js":"16","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\styles.js":"17","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Auth.js":"18","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Home\\Home.js":"19","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Navbar\\Navbar.js":"20","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Input.js":"21","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Icon.js":"22","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\auth.js":"23","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\constants\\actionTypes.js":"24","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\actions\\auth.js":"25","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Pagination\\Pagination.jsx":"26","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Pagination\\styles.js":"27","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\PostDetails\\PostDetails.jsx":"28","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\PostDetails\\styles.js":"29"},{"size":495,"mtime":1638438324120,"results":"30","hashOfConfig":"31"},{"size":1544,"mtime":1643360238235,"results":"32","hashOfConfig":"31"},{"size":4306,"mtime":1645510455577,"results":"33","hashOfConfig":"31"},{"size":1152,"mtime":1645498933002,"results":"34","hashOfConfig":"31"},{"size":4399,"mtime":1645498320268,"results":"35","hashOfConfig":"31"},{"size":540,"mtime":1638776944629,"results":"36","hashOfConfig":"37"},{"size":657,"mtime":1639318127900,"results":"38","hashOfConfig":"31"},{"size":428,"mtime":1645499110700,"results":"39","hashOfConfig":"31"},{"size":1086,"mtime":1645498575814,"results":"40","hashOfConfig":"31"},{"size":150,"mtime":1644958295314,"results":"41","hashOfConfig":"31"},{"size":1611,"mtime":1645222348898,"results":"42","hashOfConfig":"31"},{"size":2851,"mtime":1645510598445,"results":"43","hashOfConfig":"31"},{"size":1239,"mtime":1645506902559,"results":"44","hashOfConfig":"31"},{"size":384,"mtime":1639981019079,"results":"45","hashOfConfig":"31"},{"size":1248,"mtime":1644995687177,"results":"46","hashOfConfig":"31"},{"size":335,"mtime":1644869442691,"results":"47","hashOfConfig":"31"},{"size":666,"mtime":1639058790524,"results":"48","hashOfConfig":"31"},{"size":6333,"mtime":1639546857028,"results":"49","hashOfConfig":"31"},{"size":4704,"mtime":1644955654748,"results":"50","hashOfConfig":"31"},{"size":3001,"mtime":1645155855598,"results":"51","hashOfConfig":"31"},{"size":1063,"mtime":1639120272770,"results":"52","hashOfConfig":"31"},{"size":512,"mtime":1639119643550,"results":"53","hashOfConfig":"31"},{"size":857,"mtime":1639481331105,"results":"54","hashOfConfig":"31"},{"size":462,"mtime":1645220149028,"results":"55","hashOfConfig":"31"},{"size":639,"mtime":1639480009833,"results":"56","hashOfConfig":"31"},{"size":1096,"mtime":1644958520844,"results":"57","hashOfConfig":"31"},{"size":214,"mtime":1639745864543,"results":"58","hashOfConfig":"31"},{"size":3784,"mtime":1645510231014,"results":"59","hashOfConfig":"31"},{"size":862,"mtime":1645498771786,"results":"60","hashOfConfig":"31"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"go3x02",{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"tve4jg",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"63"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"63"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"63"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\index.js",[],["126","127"],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\App.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\Form.js",["128"],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Posts.js",["129"],"import React from 'react';\r\nimport useStyles from './styles';\r\nimport Post from './Post/Post';\r\nimport '../../App.css';\r\n\r\nimport { Grid, CircularProgress, Paper } from '@material-ui/core';\r\n\r\nimport { useSelector } from 'react-redux';//A hook to fetch data from the global redux store\r\n\r\nfunction Posts({ setCurrentId }) {\r\n    const { posts, isLoading } = useSelector((state) => state.data);\r\n    const classes = useStyles();\r\n\r\n    if(!posts.length && !isLoading) return 'Nothing to show...';\r\n\r\n    return (\r\n        isLoading ? (\r\n            <div className={classes.loadingPaper}>\r\n                <CircularProgress size='7em' />\r\n            </div>\r\n        ) : (\r\n            <Grid className={classes.container} container item={true} alignItems='stretch' spacing={3} >\r\n                {\r\n                    posts.map((post) => (\r\n                        <Grid item key={post._id} xs={12} sm={12} md={6} lg={3}>\r\n                            <Post post={post} setCurrentId={setCurrentId}/>\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n        )\r\n        \r\n    )\r\n}\r\n\r\nexport default Posts;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\Post.js",["130","131","132"],"import React from 'react';\r\nimport useStyles from './styles';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n//Initialise dispatch\r\nimport { useDispatch } from 'react-redux';\r\n//Import Action\r\nimport { deletePost, likePost } from '../../../actions/posts';\r\n\r\nfunction Post({ post, setCurrentId }) {\r\n    const message = post.message;\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n    const history = useHistory();\r\n    \r\n    const handleDelete = () => {\r\n        dispatch(deletePost(post._id));\r\n    }\r\n    \r\n    const handleLike = () => {\r\n        dispatch(likePost(post._id));\r\n    }\r\n\r\n    //Subcomponent for POST component - Likes\r\n    const Likes = () => {\r\n        if (post.likes.length > 0) {\r\n          return post.likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\r\n            ? (\r\n              <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{post.likes.length > 2 ? `You and ${post.likes.length - 1} others` : `${post.likes.length} like${post.likes.length > 1 ? 's' : ''}` }</>\r\n            ) : (\r\n              <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{post.likes.length} {post.likes.length === 1 ? 'Like' : 'Likes'}</>\r\n            );\r\n        }\r\n        return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>;\r\n      };\r\n    \r\n    const openPost = () => {\r\n        history.push(`posts/${post._id}`)\r\n    }\r\n      \r\n    return (\r\n        <Card className={classes.card} raised elevation={6}>\r\n            <ButtonBase\r\n                component=\"span\"\r\n                name=\"test\"\r\n                className={classes.cardAction}\r\n                onClick={openPost}\r\n            >\r\n                <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\r\n                <div className={classes.overlay}>\r\n                    <Typography variant=\"h6\">{post.name}</Typography>\r\n                    <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n                </div>\r\n                {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\r\n                    <div className={classes.overlay2} name=\"edit\">\r\n                        <Button\r\n                        onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        setCurrentId(post._id);\r\n                        }}\r\n                        style={{ color: 'white' }}\r\n                        size=\"small\"\r\n                        >\r\n                            <MoreHorizIcon fontSize=\"default\" />\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n                <div className={classes.details}>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n                </div>\r\n                <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n                <CardContent>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message.split(' ').splice(0, 20)}...</Typography>\r\n                </CardContent>\r\n            </ButtonBase>\r\n            <CardActions className={classes.cardActions}>\r\n                <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={() => dispatch(likePost(post._id))}>\r\n                <Likes />\r\n                </Button>\r\n                {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\r\n                <Button size=\"small\" color=\"secondary\" onClick={() => dispatch(deletePost(post._id))}>\r\n                    <DeleteIcon fontSize=\"small\" /> &nbsp; Delete\r\n                </Button>\r\n                )}\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\styles.js",[],["133","134"],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Form\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\index.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\posts.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\actions\\posts.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\api\\index.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\index.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Navbar\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Home\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Auth.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Home\\Home.js",["135","136","137"],"//Hooks\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\n//Material-ui Components\r\nimport { Container, Grow, Grid, Paper, AppBar, TextField, Button } from '@material-ui/core';\r\n\r\n//Styles\r\nimport useStyles from './styles';\r\n\r\n//Components\r\nimport { Form, Posts, Pagination } from '../index';\r\n\r\n//Redux components\r\nimport { useDispatch } from 'react-redux'; //Allows dispatching actions\r\nimport { getPosts, getPostsBySearch } from '../../actions/posts';\r\n\r\n//To search and To get the current page address and to decide where to send\r\nimport ChipInput from 'material-ui-chip-input';\r\n\r\n\r\n//This function can be used as a hook\r\nconst useQuery = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst Home = ({ user }) => {\r\n    const [currentId, setCurrentId] = useState(null);\r\n    const [search, setSearch] = useState('');\r\n    const [tags, setTags] = useState([]);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    \r\n    //Search related variables\r\n    const query = useQuery();//To get the page info\r\n    const history = useHistory();\r\n    const page = query.get('page') || 1; \r\n    //Give value to the variable only if there is 'page' string in the URL or Give it the first page\r\n    const searchQuery = query.get('searchQuery');\r\n    \r\n    // useEffect( () => {\r\n    //     dispatch( getPosts() );//Successful dispatch.\r\n    // }, [ currentId, dispatch ])\r\n\r\n    const handleKeyPress = (event) => {  \r\n        if(event.keyCode === 13){\r\n            searchPost()\r\n        }\r\n    }\r\n\r\n    const handleAdd = (tag) => {\r\n        setTags([...tags, tag])\r\n    }\r\n\r\n    const handleDelete = (tagToDelete) => {\r\n        setTags(tags.filter((tag) => tag !== tagToDelete))\r\n    }\r\n\r\n    const searchPost = () => {\r\n        if(search.trim() === '' && tags.join(',')  === ''){\r\n            history.push('/');\r\n        }else{\r\n            dispatch(getPostsBySearch({ search, tags: tags.join(',') }));\r\n            history.push(`/posts/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grow in> \r\n                    <Container maxWidth=\"xl\">\r\n                        <Grid container item={true} justifyContent = 'space-between' alignItems = 'stretch' spacing = {3} className={classes.mainContainer}>\r\n                            <Grid item={true} xs={12} sm={6} md={9} >\r\n                                <Posts setCurrentId={setCurrentId}/>\r\n                            </Grid>\r\n                            <Grid item={true} xs={12} sm={12} md={3}>\r\n                                <AppBar className={classes.appBarSearch} position='static' color=\"inherit\">\r\n                                    <TextField\r\n                                        name=\"search\"\r\n                                        variant=\"outlined\"\r\n                                        label=\"Search Memories\"\r\n                                        fullWidth\r\n                                        value={search}\r\n                                        onChange={(event) => {setSearch(event.target.value)}}\r\n                                        onKeyPress={handleKeyPress}\r\n                                    />\r\n                                    <ChipInput\r\n                                        style={{margin: '10px 0px'}}\r\n                                        value={tags}\r\n                                        onAdd={handleAdd}\r\n                                        onDelete={handleDelete}\r\n                                        label=\"Search Tags\"\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                    <Button onClick={searchPost} className={classes.searchButton} variant=\"contained\" color=\"primary\">\r\n                                        Search\r\n                                    </Button>\r\n                                </AppBar>\r\n                                <Form currentId={currentId} setCurrentId={setCurrentId} user={user}/>\r\n                                <Paper elevation={6}>\r\n                                    <Pagination page={page} /> \r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n             </Grow>\r\n             {/* <div className=\"test-div\">\r\n                <div className=\"test-div__inside\">\r\n                    <button onClick={openModal}>x</button>\r\n                    <p>Inside the test div</p>\r\n                </div>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\nexport default Home;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Navbar\\Navbar.js",["138"],"import React, { useEffect } from 'react';\r\nimport { AppBar, Avatar, Typography, Toolbar, Button } from '@material-ui/core';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport useStyles from './styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as actionType from '../../constants/actionTypes';\r\nimport decode from 'jwt-decode';\r\n\r\nconst Navbar = ({ user, setUser }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory('');\r\n    const location = useLocation();\r\n\r\n    //Immediately get the user from the localstorage if exists\r\n    //User goes into the localstorage once google signed in\r\n    \r\n    const logout = () => {\r\n        console.log('Logging out');\r\n        dispatch({ type: actionType.LOGOUT});\r\n        history.push('/');\r\n        setUser(null);\r\n    }\r\n    useEffect(() => {\r\n        const token = user?.token;\r\n        if(token) {\r\n            const decodedToken = decode(token);\r\n\r\n            if(decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n        }\r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n    }, [location]);\r\n\r\n    return (\r\n        <div>\r\n            <AppBar className = { classes.appBar } position = \"static\" color = 'inherit'>\r\n                <div className={classes.brandContainer}>\r\n                    <Typography className={classes.appHeading} variant='h3' component={Link} to='/'>\r\n                        Glimpses\r\n                    </Typography>\r\n                    <img className = { classes.image } src= 'https://i.pinimg.com/474x/f0/f6/6e/f0f66e9196fe55d62653cf56c3585435.jpg' alt=\"Glimpses\" height = '60' width = '60'/>\r\n                </div>\r\n                <Toolbar className={classes.toolbar}>\r\n                    {\r\n                        user ? (\r\n                            <div className={classes.profile}>\r\n                                <div className={classes.user}>\r\n                                    <Avatar className={classes.purple} alt={user.result.name} src={user.result.imageUrl}>\r\n                                        {user.result.name.charAt(0)}\r\n                                    </Avatar>\r\n                                    <Typography className={classes.userName} variant='h6'>\r\n                                        {\r\n                                            user.result.name\r\n                                        }\r\n                                    </Typography>\r\n                                </div>\r\n                                <Button variant='contained' className={classes.logout} color='secondary' onClick={ logout }>Logout</Button>\r\n                            </div>\r\n                        ) : (\r\n                            <Button component={Link} to ='/auth' variant='contained' color='primary'>Sign In</Button>\r\n                        )\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Input.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Auth\\Icon.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\reducers\\auth.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\constants\\actionTypes.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\actions\\auth.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Pagination\\Pagination.jsx",["139"],"import React, { useEffect } from 'react';\r\n\r\n//Redux components\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { getPosts } from '../../actions/posts';\r\n\r\n//Material-ui components\r\nimport { Pagination, PaginationItem } from '@material-ui/lab';\r\n\r\nimport useStyles from './styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Paginate = ({page}) => {\r\n    \r\n    const { totalPages } = useSelector((state) => state.data);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        if(page) dispatch(getPosts(page));\r\n    }, [page])\r\n    \r\n    return (\r\n        <Pagination \r\n            classes={{ ul: classes.ul }}\r\n            count={totalPages}\r\n            page={Number(page) || 1}\r\n            variant='outlined'\r\n            color='primary'\r\n            renderItem={(item) => (\r\n                //Every item will be a link to the next page with more posts to show\r\n                <PaginationItem {...item} component={Link} to={`/posts?page=${item.page}`}/> \r\n            )}\r\n        />\r\n    )\r\n}\r\nexport default Paginate;\r\n","C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\Pagination\\styles.js",[],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\PostDetails\\PostDetails.jsx",["140","141","142"],"C:\\Darpan's Projects\\MERN\\Glimpses\\client\\src\\components\\PostDetails\\styles.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":60,"column":75,"nodeType":"149","messageId":"150","endLine":60,"endColumn":76},{"ruleId":"151","severity":1,"message":"152","line":6,"column":34,"nodeType":"153","messageId":"154","endLine":6,"endColumn":39},{"ruleId":"151","severity":1,"message":"155","line":17,"column":11,"nodeType":"153","messageId":"154","endLine":17,"endColumn":18},{"ruleId":"151","severity":1,"message":"156","line":23,"column":11,"nodeType":"153","messageId":"154","endLine":23,"endColumn":23},{"ruleId":"151","severity":1,"message":"157","line":27,"column":11,"nodeType":"153","messageId":"154","endLine":27,"endColumn":21},{"ruleId":"143","replacedBy":"158"},{"ruleId":"145","replacedBy":"159"},{"ruleId":"151","severity":1,"message":"160","line":2,"column":27,"nodeType":"153","messageId":"154","endLine":2,"endColumn":36},{"ruleId":"151","severity":1,"message":"161","line":16,"column":10,"nodeType":"153","messageId":"154","endLine":16,"endColumn":18},{"ruleId":"151","severity":1,"message":"162","line":39,"column":11,"nodeType":"153","messageId":"154","endLine":39,"endColumn":22},{"ruleId":"163","severity":1,"message":"164","line":32,"column":8,"nodeType":"165","endLine":32,"endColumn":18,"suggestions":"166"},{"ruleId":"163","severity":1,"message":"167","line":20,"column":8,"nodeType":"165","endLine":20,"endColumn":14,"suggestions":"168"},{"ruleId":"163","severity":1,"message":"167","line":19,"column":8,"nodeType":"165","endLine":19,"endColumn":12,"suggestions":"169"},{"ruleId":"163","severity":1,"message":"167","line":24,"column":8,"nodeType":"165","endLine":24,"endColumn":14,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":69,"column":37,"nodeType":"173","endLine":69,"endColumn":93},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'message' is assigned a value but never used.","'handleDelete' is assigned a value but never used.","'handleLike' is assigned a value but never used.",["174"],["175"],"'useEffect' is defined but never used.","'getPosts' is defined but never used.","'searchQuery' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout', 'setUser', and 'user?.token'. Either include them or remove the dependency array. If 'setUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["176"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["177"],["178"],["179"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [location, logout, setUser, user?.token]",{"range":"188","text":"189"},"Update the dependencies array to be: [dispatch, page]",{"range":"190","text":"191"},"Update the dependencies array to be: [dispatch, id]",{"range":"192","text":"193"},"Update the dependencies array to be: [dispatch, post]",{"range":"194","text":"195"},[1143,1153],"[location, logout, setUser, user?.token]",[590,596],"[dispatch, page]",[690,694],"[dispatch, id]",[837,843],"[dispatch, post]"]